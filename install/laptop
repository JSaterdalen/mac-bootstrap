#!/usr/bin/env bash

# Adpated from thoughtbot's laptop script.
# https://github.com/thoughtbot/laptop

laptop_echo() {
  local fmt="$1"; shift

  printf "\\n[LAPTOP] $fmt\\n" "$@"
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

laptop_echo "Sudo mode is active"

if [ ! -d "${HOME}/bin/" ]; then
  mkdir "${HOME}/bin"
fi

update_zsh_shell() {
  local shell_path;
  shell_path="$(command -v zsh)"

  laptop_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    laptop_echo "Adding '${shell_path}' to /etc/shells"
    sudo sh -c "echo ${shell_path} >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
  fi
}


# # Need to install openssl before libyaml
# brew "openssl"
# brew "openssl@1.1" # wget dependency

# brew "autoconf" # asdf dependency
# brew "automake" # asdf dependency
# brew "coreutils"
# brew "gh"
# brew "git"
# brew "gnupg" # asdf-nodejs dependency
# # brew "imagemagick"
# brew "libtool" # asdf dependency
# brew "libxslt" # asdf dependency
# brew "libyaml" # asdf dependency
# brew "mas"
# brew "openssl"
# brew "sqlite"
# brew "unixodbc" # asdf dependency
# brew "wget"
# brew "zlib" # python dependency
# brew "zsh"

# cask "font-inconsolata"
# cask "font-fira-code"

update_zsh_shell

laptop_echo "Configuring asdf version manager..."
if [ ! -d "${HOME}/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
else
  "${HOME}/.asdf/bin/asdf" update
  "${HOME}/.asdf/bin/asdf" plugin-update --all
fi

install_asdf_plugin() {
  local name="$1"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name"
  fi
}

# shellcheck disable=SC1090
source "${HOME}/.asdf/asdf.sh"
install_asdf_plugin "ruby"
install_asdf_plugin "nodejs"
install_asdf_plugin "python"
install_asdf_plugin "java"

install_asdf_language() {
  local language="$1"
  local version="$2"
  asdf install "$language" "$version"
  asdf global "$language" "$version"
}

laptop_echo "Installing python..."
install_asdf_language "python" "latest"
echo "python --> $(command -v python)"
python -V
echo "pip --> $(command -v pip)"
pip -V

laptop_echo "Installing Ruby..."
install_asdf_language "ruby" "latest"
laptop_echo "Checking which Ruby and Gem installs we are using at this point..."
echo "Ruby --> $(command -v ruby)"
ruby -v
echo "Gem --> $(command -v gem)"
gem -v
gem update --system
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

laptop_echo "Installing default gems..."
gem install bundler

laptop_echo "Installing Node..."
bash "${HOME}/.asdf/plugins/nodejs/bin/import-release-team-keyring"
install_asdf_language "nodejs" "latest"
echo "Node --> $(command -v node)"
node -v
echo "NPM --> $(command -v npm)"
npm -v

laptop_echo "Installing default npm packages..."
npm install -g sfdx-cli

laptop_echo "Installing Java..."
install_asdf_language "java" "zulu-11.50.19"
source "${HOME}/.asdf/plugins/java/set-java-home.zsh"
echo "Java --> $(command -v java)"
echo $JAVA_HOME

if [ ! -d "${HOME}/.yarn" ]; then
  laptop_echo "Installing Yarn..."
  curl -o- -L https://yarnpkg.com/install.sh | bash
fi

# TODO set up manual zsh plugins
laptop_echo "Installing powerlevel10k..."
# git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $HOME/.zsh/powerlevel10k
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

# todo add nerd font for p10k

laptop_echo "Installing zsh-autosuggestions..."
# git clone https://github.com/zsh-users/zsh-autosuggestions $HOME/.zsh/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

laptop_echo "Installing zsh-syntax-highlighting..."
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.zsh/zsh-syntax-highlighting

laptop_echo "Laptop installation completed successfully!"