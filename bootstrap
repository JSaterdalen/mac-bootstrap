#!/usr/bin/env bash

################################################################################
# bootstrap
#
# This script is intended to set up a new computer with my dotfiles and
# other development preferences.
################################################################################

# TODO add checks for each step to skip them if the script is run again
# could set an environment variable for this, for each step
# then say "has this step run yet?"

# Thank you, thoughtbot!
bootstrap_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n[BOOTSTRAP] $fmt\\n" "$@"
}


################################################################################
# VARIABLE DECLARATIONS
################################################################################

osname=$(uname)
# TODO add repo branch selection back for testing
OLD_DOTFILES_BAK="${HOME}/old_dotfiles_bak"
DOTFILES_REPO_URL="https://github.com/JSaterdalen/dotfiles.git"
DOTFILES_DIR="${HOME}/dotfiles"
BOOTSTRAP_REPO_URL="https://github.com/JSaterdalen/mac-bootstrap.git"
BOOTSTRAP_DIR="${HOME}/linux-bootstrap"

PS3="> "

DEFAULT_DOTFILES_BRANCH="linux"
DEFAULT_BOOTSTRAP_BRANCH="linux"

################################################################################
# Make sure we're on a Mac before continuing
################################################################################

if [[ "$OSTYPE" == 'darwin'* ]]; then
  bootstrap_echo "Oops, looks like you're on a Mac. Please have a look at
  my Mac Bootstrap script: https://github.com/JSaterdalen/mac-bootstrap"
  exit 1
else [[ "$OSTYPE" != 'linux-gnu'* ]]; then
  bootstrap_echo "Oops, it looks like you're using a non-UNIX system. This script
only supports Linux. Exiting..."
  exit 1
fi

################################################################################
# Authenticate
################################################################################

sudo -v

# Keep-alive: update existing `sudo` time stamp until bootstrap has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

set -e


################################################################################
# Welcome and setup
################################################################################

echo
echo "*************************************************************************"
echo "*******                                                           *******"
echo "*******                 Welcome to Linux Bootstrap!                 *******"
echo "*******                                                           *******"
echo "*******        https://github.com/JSaterdalen/mac-bootstrap       *******"
echo "*******                                                           *******"
echo "*************************************************************************"
echo

printf "Before we get started, let's verify some info about the install.\\n"

printf "\\nBootstrap script will be cloned from:
==> %s.\\n" "$BOOTSTRAP_REPO_URL"
printf "Which version should we use? (Leave blank for default: %s)\\n" "$DEFAULT_BOOTSTRAP_BRANCH"
read -r -p "> " BOOTSTRAP_BRANCH
if [ -n "$BOOTSTRAP_BRANCH" ]; then
  export BOOTSTRAP_BRANCH
else
  export BOOTSTRAP_BRANCH="$DEFAULT_BOOTSTRAP_BRANCH"
fi

printf "\\nDotfiles will be cloned from:
==> %s.\\n" "$DOTFILES_REPO_URL"
printf "Which branch should we use? (Leave blank for default: %s)\\n" "$DEFAULT_DOTFILES_BRANCH"
read -r -p "> " DOTFILES_BRANCH
if [ -n "$DOTFILES_BRANCH" ]; then
  export DOTFILES_BRANCH
else
  export DOTFILES_BRANCH="$DEFAULT_DOTFILES_BRANCH"
fi

printf "\\nLooks good. Here's what we've got so far.\\n"
printf "Bootstrap version: ==> [%s]\\n" "$BOOTSTRAP_BRANCH"
printf "Dotfiles branch:   ==> [%s]\\n" "$DOTFILES_BRANCH"

echo
read -p "Continue? (y/n) " -n 1 -r
echo
if [[ ! "$REPLY" =~ ^[Yy]$ ]]; then
  echo "Exiting..."
  exit 1
fi


################################################################################
# Clone mac-bootstrap repo
################################################################################

bootstrap_echo "Cloning mac-bootstrap repo..."

if [ -d "$BOOTSTRAP_DIR" ]; then
  rm -rf "$BOOTSTRAP_DIR"
fi

git clone "$BOOTSTRAP_REPO_URL" -b "$BOOTSTRAP_BRANCH" "$BOOTSTRAP_DIR"


################################################################################
# 1. Provision with my adaptation of Laptop (install/laptop)
################################################################################

bootstrap_echo "Step 1: Installing Laptop script..."

sh "${BOOTSTRAP_DIR}/install/laptop" 2>&1 | tee ~/laptop.log

bootstrap_echo "Done!"


################################################################################
# 2. Install Oh My Zsh
################################################################################

bootstrap_echo "Step 2: Installing Oh My Zsh..."

if [ -d "${HOME}/.oh-my-zsh" ]; then
  rm -rf "${HOME}/.oh-my-zsh"
fi

git clone https://github.com/robbyrussell/oh-my-zsh.git "${HOME}/.oh-my-zsh"

if [ -d /usr/local/share/zsh ]; then
  bootstrap_echo "Setting permissions for /usr/local/share/zsh..."
  sudo chmod -R 755 /usr/local/share/zsh
fi

if [ -d /usr/local/share/zsh/site-functions ]; then
  bootstrap_echo "Setting permissions for /usr/local/share/zsh/site-functions..."
  sudo chmod -R 755 /usr/local/share/zsh/site-functions
fi

bootstrap_echo "Done!"


################################################################################
# 3. Setup dotfiles (https://github.com/JSaterdalen/dotfiles)
################################################################################

bootstrap_echo "Step 4: Installing dotfiles..."

if [[ -d $DOTFILES_DIR ]]; then
  bootstrap_echo "Backing up old dotfiles to ${HOME}/old_dotfiles_bak..."
  rm -rf "$OLD_DOTFILES_BAK"
  cp -R "$DOTFILES_DIR" "$OLD_DOTFILES_BAK"
  rm -rf "$DOTFILES_DIR"
fi

bootstrap_echo "Cloning dotfiles repo to ${DOTFILES_DIR} ..."

git clone "$DOTFILES_REPO_URL" -b "$DOTFILES_BRANCH" "$DOTFILES_DIR"

# shellcheck source=/dev/null
source "${DOTFILES_DIR}/install.sh"

bootstrap_echo "Done!"

rm -rf "$BOOTSTRAP_DIR"

echo
echo "**********************************************************************"
echo "**********************************************************************"
echo "****                                                              ****"
echo "****   Bootstrap script complete! Please restart your computer.   ****"
echo "****                                                              ****"
echo "****         https://github.com/JSaterdalen/mac-bootstrap         ****"
echo "****                                                              ****"
echo "**********************************************************************"
echo "**********************************************************************"
echo
